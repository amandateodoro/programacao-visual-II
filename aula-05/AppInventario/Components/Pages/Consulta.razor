@page "/consulta"
@rendermode InteractiveServer
@using AppInventario.Models
@using AppInventario.Services
@inject NavigationManager navegacao
@inject PessoaService pessoaService


<h3>CONSULTA DE INVENTARIO</h3>
<div class="container">
    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>
    <div class="form-group">
        <label for="input-datalist">Buscar</label>
        <input type="text" class="form-control" placeholder="Buscar" list="lista-pessoas" @onchange="SelecionarPessoas">
        <datalist id="lista-pessoas">
            @foreach (var item in Pessoas)
            {
                <option value="@item.Cpf">@item.Nome</option>
            }

        </datalist>
    </div>
    <nav class="navbar navbar-light" style="background-color: white"></nav>
    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>
    <button type="button" class="btn btn-success" @onclick="NovaPessoa">NOVA PESSOA</button>
    <button type="button" class="btn btn-primary" @onclick="ConsultarFiltro">CONSULTA COM FILTRO</button>


    <nav class="navbar navbar-light" style="background-color: white"></nav>
    <div class="mb-3">
        <label for="formControlInput1" class="form-label">NOME:</label>
        <input @bind="pessoa.Nome" type="text" class="form-control" id="formControlInput1" disabled="@campoBloqueado" />
    </div>

    <div class="row align-items-start">
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">CPF:</label>
                <input @bind="pessoa.Cpf" type="text" class="form-control" id="exampleFormControlInput2" disabled="@campoBloqueado">
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">DATA DE NASCIMENTO:</label>
                <input @bind="pessoa.DataNasc" type="date" class="form-control" id="exampleFormControlInput2" disabled="@campoBloqueado">
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">TELEFONE:</label>
                <input @bind="pessoa.Telefone" type="tel" class="form-control" id="exampleFormControlInput2" disabled="@campoBloqueado">
            </div>
        </div>
    </div>


    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <nav class="navbar navbar-light" style="background-color: darkorange"></nav>

    <nav class="navbar navbar-light" style="background-color: white"></nav>



    <h4 style="text-align:center">Bens Cadastrados</h4>
    <table class="table">
        <thead>
            <tr>
                <th>Descrição</th>
                <th>Valor</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in bensRegistrados)
            {
                <tr>
                    <td>@item.Descricao</td>
                    <td>@item.Valor</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td>TOTAL:</td>
                <td>@somaBens</td>
            </tr>
        </tfoot>
    </table>

</div>


@code {
    private string? Descricao { get; set; }
    private double? Valor { get; set; }
    private bool novo = false;
    private bool campoBloqueado = false;
    private Pessoa? pessoa = new Pessoa();
    private List<Pessoa>? Pessoas { get; set; }
    private List<Propriedade> bensRegistrados = new List<Propriedade>();
    private double? somaBens { get; set; } = 0.0;

    protected override async Task OnInitializedAsync()
    {
        Pessoas = new List<Pessoa>();
        var lista = await pessoaService?.Pessoas();
        Pessoas = lista.ToList();
    }

    public void SelecionarPessoas(ChangeEventArgs e)
    {
        string cpf = e.Value.ToString();
        var p = Pessoas.Where(p => p.Cpf == cpf).FirstOrDefault();
        if (p != null)
        {
            pessoa = p;
            bensRegistrados = pessoa.Propriedades;
            somaBens = bensRegistrados.Sum(b => b.Valor); //1 – Mostrar a soma total de todos bens registrados de uma pessoa selecionada na página da consulta.
        }
    }

    public void NovaPessoa()
    {
        navegacao.NavigateTo("/primeirocadastro");
    }

    public void ConsultarFiltro()
    {
        navegacao.NavigateTo("/filtro");
    }
}
